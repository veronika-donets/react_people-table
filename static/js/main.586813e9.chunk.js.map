{"version":3,"sources":["components/Api.js","components/Load.js","components/ButtonGroup.js","components/InputForm.js","components/TabHeader.js","components/TabCell.js","components/TabRow.js","components/DataTable.js","App.js","index.js"],"names":["loadedPeople","fetch","then","response","json","Load","_ref","showList","react_default","a","createElement","Button","size","onClick","primary","basic","ButtonGroup","props","byName","byId","bySex","byBorn","byDied","byAge","byCentury","Group","color","InputForm","filtering","Input","onChange","event","target","value","id","fluid","icon","placeholder","TabHeader","Table","Header","Row","HeaderCell","TabCell","_ref$person","person","name","sex","born","died","mother","father","age","century","Fragment","Cell","Icon","positive","TabRow","isActive","onRawSelected","key","className","components_TabCell","DataTable","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateActiveRow","val","setState","prev","_objectSpread","activeId","state","_this2","celled","components_TabHeader","Body","people","map","components_TabRow","Component","App","cashTable","createSelector","initialTable","sortValue","inputValue","filterValue","inputValueLow","toLowerCase","trim","filter","includes","sort","b","localeCompare","asyncToGenerator","regenerator_default","mark","_callee","peopleData","wrap","_context","next","loading","sent","index","App_objectSpread","Math","ceil","currentTable","stop","sortTable","prevState","_this$state","components_Load","components_InputForm","components_ButtonGroup","components_DataTable","ReactDOM","render","src_App_0","test","document","getElementById"],"mappings":"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","file":"static/js/main.586813e9.chunk.js","sourcesContent":["const loadedPeople = () => (\n  fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n    .then(response => response.json())\n);\n\nexport default loadedPeople;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\n\nfunction Load({ showList }) {\n  return (\n    <Button\n      size=\"massive\"\n      onClick={showList}\n      primary\n      basic\n    >\n      Load data\n    </Button>\n  );\n}\n\nexport default Load;\n","import React from 'react';\nimport { Button } from 'semantic-ui-react';\n\nconst ButtonGroup = (props) => {\n  const {\n    byName,\n    byId,\n    bySex,\n    byBorn,\n    byDied,\n    byAge,\n    byCentury,\n  } = props;\n\n  return (\n    <Button.Group>\n      <Button\n        basic\n        size=\"big\"\n        color=\"red\"\n        onClick={byName}\n      >\nSort by name\n      </Button>\n      <Button\n        basic\n        size=\"big\"\n        color=\"orange\"\n        onClick={byId}\n      >\nSort by id\n      </Button>\n      <Button\n        basic\n        size=\"big\"\n        color=\"yellow\"\n        onClick={bySex}\n      >\nSort by sex\n      </Button>\n      <Button\n        basic\n        size=\"big\"\n        color=\"olive\"\n        onClick={byBorn}\n      >\nSort by born\n      </Button>\n      <Button\n        basic\n        size=\"big\"\n        color=\"green\"\n        onClick={byDied}\n      >\nSort by died\n      </Button>\n      <Button\n        basic\n        size=\"big\"\n        color=\"teal\"\n        onClick={byAge}\n      >\nSort by age\n      </Button>\n      <Button\n        basic\n        size=\"big\"\n        color=\"blue\"\n        onClick={byCentury}\n      >\nSort by century\n      </Button>\n    </Button.Group>\n  );\n};\n\nexport default ButtonGroup;\n","import React from 'react';\nimport { Input } from 'semantic-ui-react';\n\nconst InputForm = ({ filtering }) => {\n  const inputChanged = (event) => {\n    filtering(event.target.value);\n  };\n\n  return (\n    <Input\n      onChange={inputChanged}\n      id=\"form-input-control\"\n      fluid\n      icon=\"search\"\n      placeholder=\"Search...\"\n    />\n  );\n};\n\nexport default InputForm;\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\n\nconst TabHeader = () => (\n  <Table.Header>\n    <Table.Row>\n      <Table.HeaderCell>Id</Table.HeaderCell>\n      <Table.HeaderCell>Name</Table.HeaderCell>\n      <Table.HeaderCell>Sex</Table.HeaderCell>\n      <Table.HeaderCell>Born</Table.HeaderCell>\n      <Table.HeaderCell>Died</Table.HeaderCell>\n      <Table.HeaderCell>Age</Table.HeaderCell>\n      <Table.HeaderCell>Century</Table.HeaderCell>\n      <Table.HeaderCell>Mother</Table.HeaderCell>\n      <Table.HeaderCell>Father</Table.HeaderCell>\n    </Table.Row>\n  </Table.Header>\n);\n\nexport default TabHeader;\n","import React from 'react';\nimport { Table, Icon } from 'semantic-ui-react';\n\nconst TabCell = ({\n  person: {\n    id,\n    name,\n    sex,\n    born,\n    died,\n    mother,\n    father,\n    age,\n    century,\n  },\n}) => (\n  <>\n    <Table.Cell>{id}</Table.Cell>\n    {\n      (born < 1650)\n        ? (\n          <Table.Cell>\n            {name}\n            {' '}\n            <Icon name=\"checkmark\" />\n          </Table.Cell>\n        )\n        : <Table.Cell>{name}</Table.Cell>\n    }\n    <Table.Cell>\n      {\n        (sex === 'f')\n          ? <Icon name=\"venus\" />\n          : <Icon name=\"mars\" />\n      }\n    </Table.Cell>\n    <Table.Cell>{born}</Table.Cell>\n    <Table.Cell>{died}</Table.Cell>\n    {\n      (age >= 65)\n        ? <Table.Cell positive>{age}</Table.Cell>\n        : <Table.Cell>{age}</Table.Cell>\n    }\n    <Table.Cell>{century}</Table.Cell>\n    <Table.Cell>{mother || 'Unknown'}</Table.Cell>\n    <Table.Cell>{father || 'Unknown'}</Table.Cell>\n  </>\n);\n\nexport default TabCell;\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport TabCell from './TabCell';\n\nconst TabRow = ({ person, isActive, onRawSelected }) => (\n  <Table.Row\n    key={person.id}\n    onClick={onRawSelected}\n    className={isActive ? 'negative' : ''}\n  >\n    <TabCell\n      person={person}\n    />\n  </Table.Row>\n);\n\nexport default TabRow;\n","import React, { Component } from 'react';\nimport { Table } from 'semantic-ui-react';\nimport TabHeader from './TabHeader';\nimport TabRow from './TabRow';\n\nclass DataTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeId: null,\n    };\n  }\n\n  updateActiveRow = (val) => {\n    this.setState(prev => ({\n      ...prev,\n      activeId: val,\n    }));\n  }\n\n  render() {\n    return (\n      <Table celled>\n        <TabHeader />\n\n        <Table.Body>\n          {this.props.people.map(person => (\n            <TabRow\n              person={person}\n              key={person.id}\n              onRawSelected={() => this.updateActiveRow(person.id)}\n              isActive={this.state.activeId === person.id}\n            />\n          ))}\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n\nexport default DataTable;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Button } from 'semantic-ui-react';\nimport { createSelector } from 'reselect';\nimport loadedPeople from './components/Api';\nimport Load from './components/Load';\nimport ButtonGroup from './components/ButtonGroup';\nimport InputForm from './components/InputForm';\nimport DataTable from './components/DataTable';\n\nclass App extends Component {\n  cashTable = createSelector(\n    [\n      state => state.initialTable,\n      state => state.sortValue,\n      state => state.inputValue,\n    ],\n    (initialTable, filterValue, inputValue) => {\n      const inputValueLow = inputValue.toLowerCase().trim();\n      const filterTable = initialTable\n        .filter(\n          person => person.name.toLowerCase().includes(inputValueLow)\n            || (person.mother ? person.mother.toLowerCase() : '').includes(inputValueLow)\n            || (person.father ? person.father.toLowerCase() : '').includes(inputValueLow)\n        );\n\n      const sortedTable = filterTable.sort((a, b) => {\n        switch (filterValue) {\n          case 'name':\n            return a.name.localeCompare(b.name);\n          case 'id':\n            return a.id - b.id;\n          case 'sex':\n            return a.sex.localeCompare(b.sex);\n          case 'born':\n            return a.born - b.born;\n          case 'died':\n            return a.died - b.died;\n          case 'age':\n            return a.age - b.age;\n          case 'century':\n            return a.century - b.century;\n          default:\n            return a.id - b.id;\n        }\n      });\n\n      return sortedTable;\n    }\n  );\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      initialTable: null,\n      currentTable: null,\n      sortValue: null,\n      inputValue: '',\n      loading: false,\n    };\n  }\n\n  showList = async() => {\n    this.setState({\n      loading: true,\n    });\n\n    const peopleData = await loadedPeople();\n    const people = peopleData.map((person, index) => ({\n      ...person,\n      id: index + 1,\n      age: person.died - person.born,\n      century: (Math.ceil(person.died / 100)),\n    }));\n\n    this.setState({\n      initialTable: people,\n      currentTable: people,\n    });\n  };\n\n  filtering = (val) => {\n    if (val) {\n      this.setState({\n        inputValue: val,\n      });\n    }\n  }\n\n  sortTable = (val) => {\n    this.setState(prevState => ({\n      ...prevState,\n      sortValue: val,\n    }));\n  }\n\n  render() {\n    const { initialTable, loading } = this.state;\n\n    if (initialTable === null) {\n      if (loading) {\n        return <Button size=\"massive\" loading primary>Loading</Button>;\n      }\n\n      return <Load showList={this.showList} />;\n    }\n\n    return (\n      <div className=\"wrapper\">\n        <InputForm filtering={this.filtering} />\n\n        <ButtonGroup\n          byName={() => this.sortTable('name')}\n          byId={() => this.sortTable('id')}\n          bySex={() => this.sortTable('sex')}\n          byBorn={() => this.sortTable('born')}\n          byDied={() => this.sortTable('died')}\n          byAge={() => this.sortTable('age')}\n          byCentury={() => this.sortTable('century')}\n        />\n\n        <DataTable\n          people={this.cashTable(this.state)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App test={123} />, document.getElementById('root'));\r\n"],"sourceRoot":""}